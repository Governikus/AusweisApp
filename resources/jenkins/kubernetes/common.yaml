apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    cattle.io/creator: norman
    workload.user.cattle.io/workloadselector: deployment-ausweisapp-common
  name: common
  namespace: ausweisapp
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: deployment-ausweisapp-common
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        workload.user.cattle.io/workloadselector: deployment-ausweisapp-common
      namespace: ausweisapp
    spec:
      containers:
        - env:
            - name: EXECUTOR
              value: '5'
            - name: FINGERPRINTS
              valueFrom:
                secretKeyRef:
                  key: FINGERPRINT
                  name: generic-secrets
                  optional: false
            - name: PASSWORD
              valueFrom:
                secretKeyRef:
                  key: PASSWORD
                  name: android-passwords
                  optional: false
            - name: GPG_PSW
              valueFrom:
                secretKeyRef:
                  key: GPG_PSW
                  name: gpg
                  optional: false
            - name: GPG_ID
              valueFrom:
                secretKeyRef:
                  key: GPG_ID
                  name: gpg
                  optional: false
          image: dev-docker.governikus.de/ausweisapp2/alpine:common
          imagePullPolicy: Always
          lifecycle:
            postStart:
              exec:
                command:
                  - sh
                  - '-c'
                  - >-
                    gpg --batch --passphrase $GPG_PSW --pinentry-mode loopback  --import /gpg/GPG_PRIVATE
          name: common
          resources:
            limits:
              cpu: '3'
              memory: 2Gi
            requests:
              cpu: 500m
              memory: 2Gi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities: {}
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          stdin: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          tty: true
          volumeMounts:
            - mountPath: /gpg
              name: gpg
              readOnly: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: gpg
          secret:
            defaultMode: 420
            optional: false
            secretName: gpg
