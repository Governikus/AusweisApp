From 00bc861d4a715afb5348a04463c58ef4d9d1f111 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Tor=20Arne=20Vestb=C3=B8?= <tor.arne.vestbo@qt.io>
Date: Mon, 12 Feb 2024 15:19:56 +0100
Subject: cmake: Generate Apple privacy manifest files for Qt modules

The default manifest is a minimal file that claims NSPrivacyTracking
false, along with an empty list of NSPrivacyTrackingDomains and
NSPrivacyCollectedDataTypes, as Qt does not generally do user tracking.

Modules can override the default manifest by setting the
PRIVACY_MANIFEST target property, specifying a custom privacy
manifest.

The NSPrivacyAccessedAPITypes key is only required for iOS for now.
Even though we don't build Qt for iOS as frameworks yet, which is
required to embed a privacy manifest, we include the keys for the
APIs we known we use.

Task-number: QTBUG-114319
Change-Id: I654bb52b98ee963adeeb744b35f3a1c2a1270969
Reviewed-by: Alexandru Croitor <alexandru.croitor@qt.io>
(cherry picked from commit 9cca899574ea44cd9c4f2be096e8b7a70f6280f2)
---
 cmake/QtBaseGlobalTargets.cmake               | 10 ++++++
 cmake/QtBuildHelpers.cmake                    |  4 +++
 cmake/QtModuleHelpers.cmake                   | 17 ++++++++++
 cmake/ios/PrivacyInfo.xcprivacy               | 14 +++++++++
 cmake/macos/PrivacyInfo.xcprivacy             | 12 +++++++
 src/corelib/CMakeLists.txt                    |  5 +++
 .../platform/ios/PrivacyInfo.xcprivacy        | 31 +++++++++++++++++++
 src/gui/CMakeLists.txt                        |  5 +++
 src/gui/platform/ios/PrivacyInfo.xcprivacy    | 23 ++++++++++++++
 src/widgets/CMakeLists.txt                    |  5 +++
 .../platform/ios/PrivacyInfo.xcprivacy        | 25 +++++++++++++++
 11 files changed, 151 insertions(+)
 create mode 100644 cmake/ios/PrivacyInfo.xcprivacy
 create mode 100644 cmake/macos/PrivacyInfo.xcprivacy
 create mode 100644 src/corelib/platform/ios/PrivacyInfo.xcprivacy
 create mode 100644 src/gui/platform/ios/PrivacyInfo.xcprivacy
 create mode 100644 src/widgets/platform/ios/PrivacyInfo.xcprivacy

diff --git x/qtbase/cmake/QtBaseGlobalTargets.cmake y/qtbase/cmake/QtBaseGlobalTargets.cmake
index 9a18cdd8a2b0aecd087be129ea469cba1a29d7f1..e6f6b474df3f851db27db3d99dc7527f07c34c45 100644
--- x/qtbase/cmake/QtBaseGlobalTargets.cmake
+++ y/qtbase/cmake/QtBaseGlobalTargets.cmake
@@ -328,6 +328,7 @@ if(APPLE)
         set(platform_shortname "ios")
     endif()
 
+    # Info.plist
     qt_copy_or_install(FILES "cmake/${platform_shortname}/Info.plist.app.in"
         DESTINATION "${__GlobalConfig_install_dir}/${platform_shortname}"
     )
@@ -336,6 +337,15 @@ if(APPLE)
         DESTINATION "${__GlobalConfig_build_dir}/${platform_shortname}"
     )
 
+    # Privacy manifest
+    qt_copy_or_install(FILES "cmake/${platform_shortname}/PrivacyInfo.xcprivacy"
+        DESTINATION "${__GlobalConfig_install_dir}/${platform_shortname}"
+    )
+    # For examples built as part of prefix build before install
+    file(COPY "cmake/${platform_shortname}/PrivacyInfo.xcprivacy"
+        DESTINATION "${__GlobalConfig_build_dir}/${platform_shortname}"
+    )
+
     if(IOS)
         qt_copy_or_install(FILES "cmake/ios/LaunchScreen.storyboard"
             DESTINATION "${__GlobalConfig_install_dir}/ios"
diff --git x/qtbase/cmake/QtBuildHelpers.cmake y/qtbase/cmake/QtBuildHelpers.cmake
index 2c1b13486735093178691e31ec804882c19d3474..48adc617121511baba16f50d3c3439d046754ce0 100644
--- x/qtbase/cmake/QtBuildHelpers.cmake
+++ y/qtbase/cmake/QtBuildHelpers.cmake
@@ -132,6 +132,10 @@ macro(qt_internal_set_apple_archiver_flags)
     endif()
 endmacro()
 
+macro(qt_internal_set_apple_privacy_manifest target manifest_file)
+    set_target_properties(${target} PROPERTIES _qt_privacy_manifest "${manifest_file}")
+endmacro()
+
 macro(qt_internal_set_debug_extend_target)
     option(QT_CMAKE_DEBUG_EXTEND_TARGET "Debug extend_target calls in Qt's build system" OFF)
 endmacro()
diff --git x/qtbase/cmake/QtModuleHelpers.cmake y/qtbase/cmake/QtModuleHelpers.cmake
index 45e59cf642319fa84f5eccbb2eeb81e2f3a83740..9eaf058865134dad81f2005c1eab64bb16b03562 100644
--- x/qtbase/cmake/QtModuleHelpers.cmake
+++ y/qtbase/cmake/QtModuleHelpers.cmake
@@ -904,6 +904,22 @@ set(QT_ALLOW_MISSING_TOOLS_PACKAGES TRUE)")
     qt_add_list_file_finalizer(qt_finalize_module ${target} ${arg_INTERNAL_MODULE} ${arg_NO_PRIVATE_MODULE})
 endfunction()
 
+function(qt_internal_apply_apple_privacy_manifest target)
+    if(APPLE)
+        # Privacy manifest
+        get_target_property(is_framework ${target} FRAMEWORK)
+        if(is_framework)
+            get_target_property(privacy_manifest ${target} _qt_privacy_manifest)
+            if(NOT privacy_manifest)
+                 set(privacy_manifest
+                    "${__qt_internal_cmake_apple_support_files_path}/PrivacyInfo.xcprivacy")
+            endif()
+            target_sources("${target}" PRIVATE "${privacy_manifest}")
+            set_property(TARGET "${target}" APPEND PROPERTY RESOURCE "${privacy_manifest}")
+        endif()
+    endif()
+endfunction()
+
 function(qt_finalize_module target)
     qt_internal_collect_module_headers(module_headers ${target})
 
@@ -927,6 +943,7 @@ function(qt_finalize_module target)
     qt_generate_prl_file(${target} "${INSTALL_LIBDIR}")
     qt_generate_module_pri_file("${target}" ${ARGN})
     qt_internal_generate_pkg_config_file(${target})
+    qt_internal_apply_apple_privacy_manifest(${target})
 endfunction()
 
 # Get a set of Qt module related values based on the target.
diff --git x/qtbase/cmake/ios/PrivacyInfo.xcprivacy y/qtbase/cmake/ios/PrivacyInfo.xcprivacy
new file mode 100644
index 0000000000000000000000000000000000000000..d75908da05846c6174fc8c39836b76669724e4da
--- /dev/null
+++ y/qtbase/cmake/ios/PrivacyInfo.xcprivacy
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
+<plist version="1.0">
+<dict>
+    <key>NSPrivacyTracking</key>
+    <false/>
+    <key>NSPrivacyCollectedDataTypes</key>
+    <array/>
+    <key>NSPrivacyTrackingDomains</key>
+    <array/>
+    <key>NSPrivacyAccessedAPITypes</key>
+    <array/>
+</dict>
+</plist>
diff --git x/qtbase/cmake/macos/PrivacyInfo.xcprivacy y/qtbase/cmake/macos/PrivacyInfo.xcprivacy
new file mode 100644
index 0000000000000000000000000000000000000000..96aff954eaa2799537b124df20d16e2752dbb56b
--- /dev/null
+++ y/qtbase/cmake/macos/PrivacyInfo.xcprivacy
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
+<plist version="1.0">
+<dict>
+    <key>NSPrivacyTracking</key>
+    <false/>
+    <key>NSPrivacyCollectedDataTypes</key>
+    <array/>
+    <key>NSPrivacyTrackingDomains</key>
+    <array/>
+</dict>
+</plist>
diff --git x/qtbase/src/corelib/CMakeLists.txt y/qtbase/src/corelib/CMakeLists.txt
index bbe8ba8489044b18210265227cde1a1cfe3efb1e..19da4f75f4284837416980a742496ee6d335db64 100644
--- x/qtbase/src/corelib/CMakeLists.txt
+++ y/qtbase/src/corelib/CMakeLists.txt
@@ -1446,6 +1446,11 @@ if(APPLE AND QT_FEATURE_framework AND QT_FEATURE_separate_debug_info)
     )
 endif()
 
+if(IOS)
+    qt_internal_set_apple_privacy_manifest(Core
+        "${CMAKE_CURRENT_SOURCE_DIR}/platform/ios/PrivacyInfo.xcprivacy")
+endif()
+
 set(linker_script_contents "")
 if (QT_NAMESPACE STREQUAL "")
     set(tag_symbol "qt_version_tag")
diff --git x/qtbase/src/corelib/platform/ios/PrivacyInfo.xcprivacy y/qtbase/src/corelib/platform/ios/PrivacyInfo.xcprivacy
new file mode 100644
index 0000000000000000000000000000000000000000..5f84a229a57f8c48be787d148d2266e7f1abe20a
--- /dev/null
+++ y/qtbase/src/corelib/platform/ios/PrivacyInfo.xcprivacy
@@ -0,0 +1,31 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
+<plist version="1.0">
+<dict>
+    <key>NSPrivacyTracking</key>
+    <false/>
+    <key>NSPrivacyCollectedDataTypes</key>
+    <array/>
+    <key>NSPrivacyTrackingDomains</key>
+    <array/>
+    <key>NSPrivacyAccessedAPITypes</key>
+    <array>
+        <dict>
+            <key>NSPrivacyAccessedAPIType</key>
+            <string>NSPrivacyAccessedAPICategoryFileTimestamp</string>
+            <key>NSPrivacyAccessedAPITypeReasons</key>
+            <array>
+                <string>0A2A.1</string> <!-- QFileInfo -->
+            </array>
+        </dict>
+        <dict>
+            <key>NSPrivacyAccessedAPIType</key>
+            <string>NSPrivacyAccessedAPICategoryDiskSpace</string>
+            <key>NSPrivacyAccessedAPITypeReasons</key>
+            <array>
+                <string>85F4.1</string> <!-- QStorageInfo -->
+            </array>
+      </dict>
+    </array>
+</dict>
+</plist>
diff --git x/qtbase/src/gui/CMakeLists.txt y/qtbase/src/gui/CMakeLists.txt
index b6f74369ae5f4f7f71cc24c2f4bf938613a422ec..e876d351d12ac512a38695a5ac250426a1420352 100644
--- x/qtbase/src/gui/CMakeLists.txt
+++ y/qtbase/src/gui/CMakeLists.txt
@@ -1039,4 +1039,9 @@ qt_internal_add_docs(Gui
     doc/qtgui.qdocconf
 )
 
+if(IOS)
+    qt_internal_set_apple_privacy_manifest(Gui
+        "${CMAKE_CURRENT_SOURCE_DIR}/platform/ios/PrivacyInfo.xcprivacy")
+endif()
+
 qt_internal_add_optimize_full_flags()
diff --git x/qtbase/src/gui/platform/ios/PrivacyInfo.xcprivacy y/qtbase/src/gui/platform/ios/PrivacyInfo.xcprivacy
new file mode 100644
index 0000000000000000000000000000000000000000..bde2b167c75a82d933f75194bc0fbae8e9b840bc
--- /dev/null
+++ y/qtbase/src/gui/platform/ios/PrivacyInfo.xcprivacy
@@ -0,0 +1,23 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
+<plist version="1.0">
+<dict>
+    <key>NSPrivacyTracking</key>
+    <false/>
+    <key>NSPrivacyCollectedDataTypes</key>
+    <array/>
+    <key>NSPrivacyTrackingDomains</key>
+    <array/>
+    <key>NSPrivacyAccessedAPITypes</key>
+    <array>
+        <dict>
+            <key>NSPrivacyAccessedAPIType</key>
+            <string>NSPrivacyAccessedAPICategorySystemBootTime</string>
+            <key>NSPrivacyAccessedAPITypeReasons</key>
+            <array>
+                <string>35F9.1</string> <!-- QUIView event handling -->
+            </array>
+        </dict>
+    </array>
+</dict>
+</plist>
diff --git x/qtbase/src/widgets/CMakeLists.txt y/qtbase/src/widgets/CMakeLists.txt
index f77117dc563205c7faae5fa57fc9845ec07c5baa..2ba8e4719a7bdf4bb9de636bb591b1d5abcfd286 100644
--- x/qtbase/src/widgets/CMakeLists.txt
+++ y/qtbase/src/widgets/CMakeLists.txt
@@ -911,6 +911,11 @@ qt_internal_add_docs(Widgets
     doc/qtwidgets.qdocconf
 )
 
+if(IOS)
+    qt_internal_set_apple_privacy_manifest(Widgets
+        "${CMAKE_CURRENT_SOURCE_DIR}/platform/ios/PrivacyInfo.xcprivacy")
+endif()
+
 # include the snippet projects for developer-builds
 if(QT_FEATURE_private_tests)
     add_subdirectory(doc/snippets/customviewstyle)
diff --git x/qtbase/src/widgets/platform/ios/PrivacyInfo.xcprivacy y/qtbase/src/widgets/platform/ios/PrivacyInfo.xcprivacy
new file mode 100644
index 0000000000000000000000000000000000000000..819b868e1a739c85fff02d4a42817d035580497d
--- /dev/null
+++ y/qtbase/src/widgets/platform/ios/PrivacyInfo.xcprivacy
@@ -0,0 +1,25 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
+<plist version="1.0">
+<dict>
+    <key>NSPrivacyTracking</key>
+    <false/>
+    <key>NSPrivacyCollectedDataTypes</key>
+    <array/>
+    <key>NSPrivacyTrackingDomains</key>
+    <array/>
+    <key>NSPrivacyAccessedAPITypes</key>
+    <array>
+        <dict>
+            <key>NSPrivacyAccessedAPIType</key>
+            <string>NSPrivacyAccessedAPICategoryFileTimestamp</string>
+            <key>NSPrivacyAccessedAPITypeReasons</key>
+            <array>
+                <string>DDA9.1</string> <!-- QFileDialog -->
+                <string>C617.1</string> <!-- QFileDialog -->
+                <string>3B52.1</string> <!-- QFileDialog -->
+            </array>
+      </dict>
+    </array>
+</dict>
+</plist>
