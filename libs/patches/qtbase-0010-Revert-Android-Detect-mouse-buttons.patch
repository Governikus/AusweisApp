From 55c028daaba60fd0cca52be42986014385b3e7f6 Mon Sep 17 00:00:00 2001
From: Jan Moeller <Jan.Moeller@governikus.de>
Date: Wed, 26 Jun 2024 15:26:09 +0200
Subject: Revert "Android: Detect mouse buttons"

This reverts commit 8d8cbe87e21f05b7d611ed4be47299977288b267.
---
 .../qtproject/qt/android/QtInputDelegate.java |  8 +-
 .../platforms/android/androidjniinput.cpp     | 86 +++----------------
 2 files changed, 15 insertions(+), 79 deletions(-)

diff --git x/qtbase/src/android/jar/src/org/qtproject/qt/android/QtInputDelegate.java y/qtbase/src/android/jar/src/org/qtproject/qt/android/QtInputDelegate.java
index fb7b69c0dd1af589f28193f640f194ca9c421867..5327049f4445ab05b1e02267b7ddd970654e85dc 100644
--- x/qtbase/src/android/jar/src/org/qtproject/qt/android/QtInputDelegate.java
+++ y/qtbase/src/android/jar/src/org/qtproject/qt/android/QtInputDelegate.java
@@ -501,8 +501,8 @@ public class QtInputDelegate implements QtInputConnection.QtInputConnectionListe
     // tablet methods
 
     // pointer methods
-    public static native void mouseDown(int winId, int x, int y, int mouseButtonState);
-    public static native void mouseUp(int winId, int x, int y, int mouseButtonState);
+    public static native void mouseDown(int winId, int x, int y);
+    public static native void mouseUp(int winId, int x, int y);
     public static native void mouseMove(int winId, int x, int y);
     public static native void mouseWheel(int winId, int x, int y, float hDelta, float vDelta);
     public static native void touchBegin(int winId);
@@ -618,11 +618,11 @@ public class QtInputDelegate implements QtInputConnection.QtInputConnectionListe
     {
         switch (event.getActionMasked()) {
             case MotionEvent.ACTION_UP:
-                mouseUp(id, (int) event.getX(), (int) event.getY(), event.getButtonState());
+                mouseUp(id, (int) event.getX(), (int) event.getY());
                 break;
 
             case MotionEvent.ACTION_DOWN:
-                mouseDown(id, (int) event.getX(), (int) event.getY(), event.getButtonState());
+                mouseDown(id, (int) event.getX(), (int) event.getY());
                 m_oldX = (int) event.getX();
                 m_oldY = (int) event.getY();
                 break;
diff --git x/qtbase/src/plugins/platforms/android/androidjniinput.cpp y/qtbase/src/plugins/platforms/android/androidjniinput.cpp
index d074e73b9e5519d433089e5cae6cd6d6da4e28e8..00e6b7ca51d3e90dc09a14f3bb1cc14029c5dcdc 100644
--- x/qtbase/src/plugins/platforms/android/androidjniinput.cpp
+++ y/qtbase/src/plugins/platforms/android/androidjniinput.cpp
@@ -28,8 +28,6 @@ Q_DECLARE_JNI_CLASS(QtLayout, "org/qtproject/qt/android/QtLayout")
 namespace QtAndroidInput
 {
     static bool m_ignoreMouseEvents = false;
-    static Qt::MouseButtons m_buttons = Qt::NoButton;
-
     static QRect m_softwareKeyboardRect;
 
     static QList<QWindowSystemInterface::TouchPoint> m_touchPoints;
@@ -162,72 +160,7 @@ namespace QtAndroidInput
                                            anchor.x(), anchor.y(), rtl);
     }
 
-    // from https://developer.android.com/reference/android/view/MotionEvent#getButtonState()
-    enum AndroidMouseButton {
-        BUTTON_PRIMARY = 0x00000001,
-        BUTTON_SECONDARY = 0x00000002,
-        BUTTON_TERTIARY = 0x00000004,
-        BUTTON_BACK = 0x00000008,
-        BUTTON_FORWARD = 0x00000010,
-        BUTTON_STYLUS_PRIMARY = 0x00000020,
-        BUTTON_STYLUS_SECONDARY = 0x00000040,
-    };
-    Q_DECLARE_FLAGS(AndroidMouseButtons, AndroidMouseButton)
-
-    static Qt::MouseButtons toMouseButtons(jint j_buttons)
-    {
-        const auto buttons = static_cast<AndroidMouseButtons>(j_buttons);
-        Qt::MouseButtons mouseButtons;
-        if (buttons.testFlag(BUTTON_PRIMARY))
-            mouseButtons.setFlag(Qt::LeftButton);
-
-        if (buttons.testFlag(BUTTON_SECONDARY))
-            mouseButtons.setFlag(Qt::RightButton);
-
-        if (buttons.testFlag(BUTTON_TERTIARY))
-            mouseButtons.setFlag(Qt::MiddleButton);
-
-        if (buttons.testFlag(BUTTON_BACK))
-            mouseButtons.setFlag(Qt::BackButton);
-
-        if (buttons.testFlag(BUTTON_FORWARD))
-            mouseButtons.setFlag(Qt::ForwardButton);
-
-        if (buttons.testFlag(BUTTON_STYLUS_PRIMARY))
-            mouseButtons.setFlag(Qt::LeftButton);
-
-        if (buttons.testFlag(BUTTON_STYLUS_SECONDARY))
-            mouseButtons.setFlag(Qt::RightButton);
-
-        // Fall back to left button
-        if (Q_UNLIKELY(buttons != 0 && mouseButtons == Qt::NoButton)) {
-            qWarning() << "Unhandled button value:" << buttons << "Falling back to Qt::LeftButton";
-            mouseButtons = Qt::LeftButton;
-        }
-        return mouseButtons;
-    }
-
-    static void sendMouseButtonEvents(QWindow *topLevel, QPoint localPos, QPoint globalPos,
-                                      jint mouseButtonState, QEvent::Type type)
-    {
-        const Qt::MouseButtons mouseButtons = toMouseButtons(mouseButtonState);
-        const Qt::MouseButtons changedButtons = mouseButtons & ~m_buttons;
-
-        if (changedButtons == Qt::NoButton)
-            return;
-
-        static_assert (sizeof(changedButtons) <= sizeof(uint), "Qt::MouseButtons size changed. Adapt code.");
-
-        for (uint buttonInt = 0x1; static_cast<uint>(changedButtons) >= buttonInt; buttonInt <<= 1) {
-            const auto button = static_cast<Qt::MouseButton>(buttonInt);
-            if (changedButtons.testFlag(button)) {
-                QWindowSystemInterface::handleMouseEvent(topLevel, localPos, globalPos,
-                                                         mouseButtons, button, type);
-            }
-        }
-    }
-
-    static void mouseDown(JNIEnv */*env*/, jobject /*thiz*/, jint winId, jint x, jint y, jint mouseButtonState)
+    static void mouseDown(JNIEnv */*env*/, jobject /*thiz*/, jint winId, jint x, jint y)
     {
         if (m_ignoreMouseEvents)
             return;
@@ -236,11 +169,13 @@ namespace QtAndroidInput
         QWindow *window = windowFromId(winId);
         m_mouseGrabber = window;
         const QPoint localPos = window && window->handle() ?
-                window->handle()->mapFromGlobal(globalPos) : globalPos;
-        sendMouseButtonEvents(window, localPos, globalPos, mouseButtonState, QEvent::MouseButtonPress);
+                                    window->handle()->mapFromGlobal(globalPos) : globalPos;
+        QWindowSystemInterface::handleMouseEvent(window, localPos, globalPos,
+                                                 Qt::MouseButtons(Qt::LeftButton),
+                                                 Qt::LeftButton, QEvent::MouseButtonPress);
     }
 
-    static void mouseUp(JNIEnv */*env*/, jobject /*thiz*/, jint winId, jint x, jint y, jint mouseButtonState)
+    static void mouseUp(JNIEnv */*env*/, jobject /*thiz*/, jint winId, jint x, jint y)
     {
         const QPoint globalPos(x,y);
         QWindow *window = m_mouseGrabber.data();
@@ -249,8 +184,9 @@ namespace QtAndroidInput
 
         const QPoint localPos = window && window->handle() ?
                                     window->handle()->mapFromGlobal(globalPos) : globalPos;
-
-        sendMouseButtonEvents(window, localPos, globalPos, mouseButtonState, QEvent::MouseButtonRelease);
+        QWindowSystemInterface::handleMouseEvent(window, localPos, globalPos,
+                                                 Qt::MouseButtons(Qt::NoButton),
+                                                 Qt::LeftButton, QEvent::MouseButtonRelease);
         m_ignoreMouseEvents = false;
         m_mouseGrabber.clear();
     }
@@ -964,8 +900,8 @@ namespace QtAndroidInput
         {"touchAdd","(IIIZIIFFFF)V",(void*)touchAdd},
         {"touchEnd","(II)V",(void*)touchEnd},
         {"touchCancel", "(I)V", (void *)touchCancel},
-        {"mouseDown", "(IIII)V", (void *)mouseDown},
-        {"mouseUp", "(IIII)V", (void *)mouseUp},
+        {"mouseDown", "(III)V", (void *)mouseDown},
+        {"mouseUp", "(III)V", (void *)mouseUp},
         {"mouseMove", "(III)V", (void *)mouseMove},
         {"mouseWheel", "(IIIFF)V", (void *)mouseWheel},
         {"longPress", "(III)V", (void *)longPress},
