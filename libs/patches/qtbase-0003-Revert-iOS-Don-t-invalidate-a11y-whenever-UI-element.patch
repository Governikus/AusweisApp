From 525b1bd08f9805685134f6f2272edff80fe4b023 Mon Sep 17 00:00:00 2001
From: Andre Klitzing <andre.klitzing@governikus.de>
Date: Mon, 24 Jul 2023 16:13:12 +0200
Subject: Revert "iOS: Don't invalidate a11y whenever UI elements are added or
 removed"

This reverts commit 6eefbf74149164eac316cea59a00b45f70976ad2.
---
 .../platforms/ios/qiosplatformaccessibility.mm  | 17 ++++-------------
 src/plugins/platforms/ios/qioswindow.mm         |  1 -
 .../platforms/ios/quiview_accessibility.mm      |  1 +
 3 files changed, 5 insertions(+), 14 deletions(-)

diff --git x/qtbase/src/plugins/platforms/ios/qiosplatformaccessibility.mm y/qtbase/src/plugins/platforms/ios/qiosplatformaccessibility.mm
index f22782fb043cd6dfe6d2e364d6d4b7b2897d0c29..d54b7db57a35acbe68121a215ba96c602d29ac04 100644
--- x/qtbase/src/plugins/platforms/ios/qiosplatformaccessibility.mm
+++ y/qtbase/src/plugins/platforms/ios/qiosplatformaccessibility.mm
@@ -25,6 +25,8 @@ void invalidateCache(QAccessibleInterface *iface)
     // This will invalidate everything regardless of what window the
     // interface belonged to. We might want to revisit this strategy later.
     // (Therefore this function still takes the interface as argument)
+    // It is also responsible for the bug that focus gets temporary lost
+    // when items get added or removed from the screen
     foreach (QWindow *win, QGuiApplication::topLevelWindows()) {
         if (win && win->handle()) {
             QT_PREPEND_NAMESPACE(QIOSWindow) *window = static_cast<QT_PREPEND_NAMESPACE(QIOSWindow) *>(win->handle());
@@ -36,25 +38,14 @@ void invalidateCache(QAccessibleInterface *iface)
 
 void QIOSPlatformAccessibility::notifyAccessibilityUpdate(QAccessibleEvent *event)
 {
-    auto *accessibleInterface = event->accessibleInterface();
-    if (!isActive() || !accessibleInterface)
+    if (!isActive() || !event->accessibleInterface())
         return;
     switch (event->type()) {
     case QAccessible::ObjectCreated:
     case QAccessible::ObjectShow:
     case QAccessible::ObjectHide:
     case QAccessible::ObjectDestroyed:
-        invalidateCache(accessibleInterface);
-        switch (accessibleInterface->role()) {
-        case QAccessible::Window:
-        case QAccessible::Dialog:
-            // Bigger changes to the UI require a full reset of VoiceOver
-            UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, nil);
-            break;
-        default:
-            // While smaller changes can be handled by re-reading the layout
-            UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, nil);
-        }
+        invalidateCache(event->accessibleInterface());
         break;
     default:
         break;
diff --git x/qtbase/src/plugins/platforms/ios/qioswindow.mm y/qtbase/src/plugins/platforms/ios/qioswindow.mm
index 8de094533bfc97c4af0c79f71207056ca278f5fb..99f9e3884668555afd4a41db6c39828d1ef56194 100644
--- x/qtbase/src/plugins/platforms/ios/qioswindow.mm
+++ y/qtbase/src/plugins/platforms/ios/qioswindow.mm
@@ -75,7 +75,6 @@ QIOSWindow::~QIOSWindow()
     [m_view touchesCancelled:[NSSet set] withEvent:0];
 
     clearAccessibleCache();
-
     m_view.platformWindow = 0;
     [m_view removeFromSuperview];
     [m_view release];
diff --git x/qtbase/src/plugins/platforms/ios/quiview_accessibility.mm y/qtbase/src/plugins/platforms/ios/quiview_accessibility.mm
index 04e1f8cfb3098b9135703bc5e24e025288643111..366141ef8195728d900beaeb4fc9d2229476aab8 100644
--- x/qtbase/src/plugins/platforms/ios/quiview_accessibility.mm
+++ y/qtbase/src/plugins/platforms/ios/quiview_accessibility.mm
@@ -54,6 +54,7 @@
 - (void)clearAccessibleCache
 {
     [m_accessibleElements removeAllObjects];
+    UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, @"");
 }
 
 // this is a container, returning yes here means the functions below will never be called
