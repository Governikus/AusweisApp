From 4792d096ce5b976107cea653aecfd00d77c5ba21 Mon Sep 17 00:00:00 2001
From: Ville Voutilainen <ville.voutilainen@qt.io>
Date: Sun, 18 Aug 2024 01:59:29 +0300
Subject: Fix an evaluated use of std::declval in qjnitypes.h

While other compilers don't seem to have trouble with this, the latest
NDK (27) compiler does. That compiler diagnoses the empty-pack case, even though in that case there is no actual use of declval, as the pack-expanded expression contains no use of declval.
For other compilers, that may work for functions that have no arguments, but will not work for any function that does have arguments; in that case, the attempt to use declval will always be ill-formed, and there will be an attempt to use declval.

The fix is straightforward; we have a Ret(*)(Args...), its return type
is simply Ret. So use a simple trait instead of the result of a call.

Task-number: QTBUG-127468
Change-Id: I0dc9e1201914ab94acc2940870be7c6d8cb16c12
Pick-to: 6.8 6.7
Reviewed-by: Thiago Macieira <thiago.macieira@intel.com>
(cherry picked from commit 236c6ec6f4c777d0534539f1c293cfc74006a6eb)
---
 src/corelib/kernel/qjnitypes.h | 14 ++++++++------
 1 file changed, 8 insertions(+), 6 deletions(-)

diff --git x/qtbase/src/corelib/kernel/qjnitypes.h y/qtbase/src/corelib/kernel/qjnitypes.h
index 4317f75fdba76abbd671e37ad434a4cf4e0c95f5..5e0754714b7936297d58c65cc03d1cc6664d35a9 100644
--- x/qtbase/src/corelib/kernel/qjnitypes.h
+++ y/qtbase/src/corelib/kernel/qjnitypes.h
@@ -123,12 +123,14 @@ static constexpr auto makeTupleFromArgs(Ret (*)(JNIEnv *, jclass, Args...), va_l
     return makeTupleFromArgsHelper<Args...>(args);
 }
 
-// Get the return type of a function point
-template <typename Ret, typename ...Args>
-auto nativeFunctionReturnType(Ret(*function)(Args...))
+template <typename>
+struct NativeFunctionReturnType {};
+
+template<typename Ret, typename... Args>
+struct NativeFunctionReturnType<Ret(Args...)>
 {
-    return function(std::declval<Args>()...);
-}
+  using type = Ret;
+};
 
 } // namespace Detail
 } // namespace QtJniMethods
@@ -139,7 +141,7 @@ auto nativeFunctionReturnType(Ret(*function)(Args...))
 // the actual function with. This then takes care of implicit conversions,
 // e.g. a jobject becomes a QJniObject.
 #define Q_DECLARE_JNI_NATIVE_METHOD_HELPER(Method)                              \
-static decltype(QtJniMethods::Detail::nativeFunctionReturnType(Method))         \
+static QtJniMethods::Detail::NativeFunctionReturnType<decltype(Method)>::type   \
 va_##Method(JNIEnv *env, jclass thiz, ...)                                      \
 {                                                                               \
     va_list args;                                                               \
