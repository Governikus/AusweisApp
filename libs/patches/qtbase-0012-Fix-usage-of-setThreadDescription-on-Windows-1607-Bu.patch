From ce47a599a1d59c63ac316a71b7481e3fc1a46c2d Mon Sep 17 00:00:00 2001
From: Lars Schmertmann <Lars.Schmertmann@governikus.de>
Date: Wed, 26 Feb 2025 08:17:44 +0100
Subject: Fix usage of setThreadDescription on Windows 1607 (Build 14393)

Windows Server 2016, Windows 10 LTSB 2016 and Windows 10 version 1607:
SetThreadDescription is only available by Run Time Dynamic Linking in KernelBase.dll.
https://learn.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-setthreaddescription

Task-number: QTBUG-134075
---
 src/corelib/thread/qthread_win.cpp | 21 +++++++++------------
 1 file changed, 9 insertions(+), 12 deletions(-)

diff --git x/qtbase/src/corelib/thread/qthread_win.cpp y/qtbase/src/corelib/thread/qthread_win.cpp
index 33dd03166cf1f6639a9e805f16aeba454f1fe5d9..8e583a2330eb802520d303339a996cb9eca0c292 100644
--- x/qtbase/src/corelib/thread/qthread_win.cpp
+++ y/qtbase/src/corelib/thread/qthread_win.cpp
@@ -19,17 +19,6 @@
 #endif // _MT
 #include <process.h>
 
-extern "C" {
-// MinGW is missing the declaration of SetThreadDescription:
-WINBASEAPI
-HRESULT
-WINAPI
-SetThreadDescription(
-    _In_ HANDLE hThread,
-    _In_ PCWSTR lpThreadDescription
-    );
-}
-
 QT_BEGIN_NAMESPACE
 
 #if QT_CONFIG(thread)
@@ -240,6 +229,8 @@ QAbstractEventDispatcher *QThreadPrivate::createEventDispatcher(QThreadData *dat
 
 #if QT_CONFIG(thread)
 
+typedef HRESULT (__cdecl *DESCFUNC)(HANDLE, PCWSTR);
+
 unsigned int __stdcall QT_ENSURE_STACK_ALIGNED_FOR_SSE QThreadPrivate::start(void *arg) noexcept
 {
     QThread *thr = reinterpret_cast<QThread *>(arg);
@@ -263,7 +254,13 @@ unsigned int __stdcall QT_ENSURE_STACK_ALIGNED_FOR_SSE QThreadPrivate::start(voi
     QString threadName = std::exchange(thr->d_func()->objectName, {});
     if (Q_LIKELY(threadName.isEmpty()))
         threadName = QString::fromUtf8(thr->metaObject()->className());
-    SetThreadDescription(GetCurrentThread(), reinterpret_cast<const wchar_t *>(threadName.utf16()));
+    HMODULE kernelbase = GetModuleHandleW(L"kernelbase.dll");
+    if (kernelbase != NULL) {
+        DESCFUNC setThreadDescription = (DESCFUNC)(void*)GetProcAddress(kernelbase, "SetThreadDescription");
+        if (setThreadDescription != NULL) {
+            setThreadDescription(GetCurrentThread(), reinterpret_cast<const wchar_t *>(threadName.utf16()));
+        }
+    }
 
     emit thr->started(QThread::QPrivateSignal());
     QThread::setTerminationEnabled(true);
