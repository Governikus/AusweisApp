From 3d335f3c8e554512c04c5e727c2d04a93efa678a Mon Sep 17 00:00:00 2001
From: Assam Boudjelthia <assam.boudjelthia@qt.io>
Date: Wed, 12 Jun 2024 13:05:16 +0300
Subject: Android: restart whole app if the activity was restarted
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

If the Activity restart path is run while m_layout is null,
it would lead to a NullPointerException when trying to
access m_layout. Moreover, the code here doesn't make sense,
as m_layout.getParent() should probably be only done when
super.updateActivityAfterRestart() returns true because if
it returns false, the app will be restarted anyway.

Testing the restarting behavior of the Activity, it seems
that the code code doesn't really work in bringing the app
to a usable state after an activity restart, and this code
path should be re-evaluated. Thus, I'm simplifying the logic
to only restart the whole app, and later figure out a way to
do a proper smooth transition instead.

Fixes: QTBUG-124786
Pick-to: 6.8 6.7
Change-Id: I79f0c53c815bf71c831d0b930f358c9fd820a2d4
Reviewed-by: Tinja Paavosepp√§ <tinja.paavoseppa@qt.io>
(cherry picked from commit 7602f71aa6cd10ff1b16d154fa967c8fce8e8d0a)
---
 .../qtproject/qt/android/QtActivityBase.java  | 28 +++++++++----------
 .../qt/android/QtActivityDelegate.java        | 15 ----------
 .../qt/android/QtActivityDelegateBase.java    | 15 ----------
 3 files changed, 14 insertions(+), 44 deletions(-)

diff --git x/qtbase/src/android/jar/src/org/qtproject/qt/android/QtActivityBase.java y/qtbase/src/android/jar/src/org/qtproject/qt/android/QtActivityBase.java
index 7b13331d9d293ebaecd29fd5a2f1b4cce98bcf17..04e7d6fd50acda89b3d92167c9aa9db97991a002 100644
--- x/qtbase/src/android/jar/src/org/qtproject/qt/android/QtActivityBase.java
+++ y/qtbase/src/android/jar/src/org/qtproject/qt/android/QtActivityBase.java
@@ -63,25 +63,19 @@ public class QtActivityBase extends Activity
         m_applicationParams += params;
     }
 
-    private void handleActivityRestart() {
-        if (QtNative.getStateDetails().isStarted) {
-            boolean updated = m_delegate.updateActivityAfterRestart(this);
-            if (!updated) {
-                // could not update the activity so restart the application
-                Intent intent = Intent.makeRestartActivityTask(getComponentName());
-                startActivity(intent);
-                QtNative.quitApp();
-                Runtime.getRuntime().exit(0);
-            }
-        }
-    }
-
     @Override
     public void setTheme(int resId) {
         super.setTheme(resId);
         m_isCustomThemeSet = true;
     }
 
+    private void restartApplication() {
+        Intent intent = Intent.makeRestartActivityTask(getComponentName());
+        startActivity(intent);
+        QtNative.quitApp();
+        Runtime.getRuntime().exit(0);
+    }
+
     @Override
     protected void onCreate(Bundle savedInstanceState)
     {
@@ -94,9 +88,15 @@ public class QtActivityBase extends Activity
                     android.R.style.Theme_Holo_Light);
         }
 
+        if (QtNative.getStateDetails().isStarted) {
+            // We don't yet have a reliable way to keep the app
+            // running properly in case of an Activity only restart,
+            // so for now restart the whole app.
+            restartApplication();
+        }
+
         m_delegate = new QtActivityDelegate(this);
 
-        handleActivityRestart();
         addReferrer(getIntent());
 
         QtActivityLoader loader = new QtActivityLoader(this);
diff --git x/qtbase/src/android/jar/src/org/qtproject/qt/android/QtActivityDelegate.java y/qtbase/src/android/jar/src/org/qtproject/qt/android/QtActivityDelegate.java
index e385432dd86b6861faec2cb206f869e17a3b2ff2..e517eea9810b29044163b164e3839713c9a2140b 100644
--- x/qtbase/src/android/jar/src/org/qtproject/qt/android/QtActivityDelegate.java
+++ y/qtbase/src/android/jar/src/org/qtproject/qt/android/QtActivityDelegate.java
@@ -74,21 +74,6 @@ public class QtActivityDelegate extends QtActivityDelegateBase
         });
     }
 
-    @Override
-    public boolean updateActivityAfterRestart(Activity activity) {
-        boolean updated = super.updateActivityAfterRestart(activity);
-        // TODO verify whether this is even needed, the last I checked the initMembers
-        // recreates the layout anyway
-        // update the new activity content view to old layout
-        ViewGroup layoutParent = (ViewGroup)m_layout.getParent();
-        if (layoutParent != null)
-            layoutParent.removeView(m_layout);
-
-        m_activity.setContentView(m_layout);
-
-        return updated;
-    }
-
     @Override
     void startNativeApplicationImpl(String appParams, String mainLib)
     {
diff --git x/qtbase/src/android/jar/src/org/qtproject/qt/android/QtActivityDelegateBase.java y/qtbase/src/android/jar/src/org/qtproject/qt/android/QtActivityDelegateBase.java
index b73fe363c3768f9ee5840d35bb1650dc0585ad6c..8603f0f69800f1aa1c5daf6a4d21b550b2e0c887 100644
--- x/qtbase/src/android/jar/src/org/qtproject/qt/android/QtActivityDelegateBase.java
+++ y/qtbase/src/android/jar/src/org/qtproject/qt/android/QtActivityDelegateBase.java
@@ -89,21 +89,6 @@ abstract class QtActivityDelegateBase
         return m_contextMenuVisible;
     }
 
-    public boolean updateActivityAfterRestart(Activity activity) {
-        try {
-            // set new activity
-            m_activity = activity;
-            QtNative.setActivity(m_activity);
-
-            // force c++ native activity object to update
-            return QtNative.updateNativeActivity();
-        } catch (Exception e) {
-            Log.w(QtNative.QtTAG, "Failed to update the activity.");
-            e.printStackTrace();
-            return false;
-        }
-    }
-
     public void startNativeApplication(String appParams, String mainLib)
     {
         if (m_membersInitialized)
