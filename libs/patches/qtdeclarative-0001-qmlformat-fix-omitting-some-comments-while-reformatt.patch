From 7785342c8d6fe223977958c59cd4102ed417d442 Mon Sep 17 00:00:00 2001
From: Semih Yavuz <semih.yavuz@qt.io>
Date: Wed, 18 Jan 2023 15:36:23 +0100
Subject: qmlformat: fix omitting some comments while reformatting

We rewrite comments associated to a node on the preVisit call
(if they were marked as preComment), or postVisit( if comments were
marked as postComments) of the reformatter. If the comment
associated with a patternProperty kind of node, neither of these
functions are called. Add missing call to previsit/postVist
in the pattern property node visit.

Pick-to: 6.4 6.5
Fixes: QTBUG-109074
Change-Id: If57968b3f5dbd83aa23dc2cd2bca3608ee841d49
Reviewed-by: Sami Shalayel <sami.shalayel@qt.io>
Reviewed-by: Ulf Hermann <ulf.hermann@qt.io>
(cherry picked from commit 444d4f1f3f27a81996d9cbcc0642040b68728260)
---
 src/qmldom/qqmldomreformatter.cpp                   |  2 ++
 .../qmlformat/data/dontRemoveComments.formatted.qml | 13 +++++++++++++
 .../auto/qml/qmlformat/data/dontRemoveComments.qml  | 13 +++++++++++++
 tests/auto/qml/qmlformat/tst_qmlformat.cpp          |  3 +++
 4 files changed, 31 insertions(+)
 create mode 100644 tests/auto/qml/qmlformat/data/dontRemoveComments.formatted.qml
 create mode 100644 tests/auto/qml/qmlformat/data/dontRemoveComments.qml

diff --git x/qtdeclarative/src/qmldom/qqmldomreformatter.cpp y/qtdeclarative/src/qmldom/qqmldomreformatter.cpp
index bb76f8f772..3dfacfc84e 100644
--- x/qtdeclarative/src/qmldom/qqmldomreformatter.cpp
+++ y/qtdeclarative/src/qmldom/qqmldomreformatter.cpp
@@ -301,6 +301,7 @@ protected:
         for (PatternPropertyList *it = ast; it; it = it->next) {
             PatternProperty *assignment = AST::cast<PatternProperty *>(it->property);
             if (assignment) {
+                preVisit(assignment);
                 bool isStringLike = AST::cast<StringLiteralPropertyName *>(assignment->name)
                         || cast<IdentifierPropertyName *>(assignment->name);
                 if (isStringLike)
@@ -316,6 +317,7 @@ protected:
                 accept(assignment->initializer);
                 if (it->next)
                     newLine();
+                postVisit(assignment);
                 continue;
             }
             PatternPropertyList *getterSetter = AST::cast<PatternPropertyList *>(it->next);
diff --git x/qtdeclarative/tests/auto/qml/qmlformat/data/dontRemoveComments.formatted.qml y/qtdeclarative/tests/auto/qml/qmlformat/data/dontRemoveComments.formatted.qml
new file mode 100644
index 0000000000..0c7a2829c9
--- /dev/null
+++ y/qtdeclarative/tests/auto/qml/qmlformat/data/dontRemoveComments.formatted.qml
@@ -0,0 +1,13 @@
+Item {
+    property var test: [{
+            // Testing
+            "foo": "bar"
+        }]
+
+    onTestChanged: {
+        fooBar(test, {
+                // Testing
+                "foo": "bar"
+            });
+    }
+}
diff --git x/qtdeclarative/tests/auto/qml/qmlformat/data/dontRemoveComments.qml y/qtdeclarative/tests/auto/qml/qmlformat/data/dontRemoveComments.qml
new file mode 100644
index 0000000000..1797834879
--- /dev/null
+++ y/qtdeclarative/tests/auto/qml/qmlformat/data/dontRemoveComments.qml
@@ -0,0 +1,13 @@
+Item {
+    property var test: [{
+// Testing
+            "foo": "bar"
+        }]
+
+    onTestChanged: {
+        fooBar(test, {
+                // Testing
+            "foo": "bar"
+        });
+    }
+}
diff --git x/qtdeclarative/tests/auto/qml/qmlformat/tst_qmlformat.cpp y/qtdeclarative/tests/auto/qml/qmlformat/tst_qmlformat.cpp
index 9d7beb23a7..7755095acd 100644
--- x/qtdeclarative/tests/auto/qml/qmlformat/tst_qmlformat.cpp
+++ y/qtdeclarative/tests/auto/qml/qmlformat/tst_qmlformat.cpp
@@ -276,6 +276,9 @@ void TestQmlformat::testFormat_data()
     QTest::newRow("forWithLet")
             << "forWithLet.qml"
             << "forWithLet.formatted.qml" << QStringList {} << RunOption::OnCopy;
+    QTest::newRow("dontRemoveComments")
+            << "dontRemoveComments.qml"
+            << "dontRemoveComments.formatted.qml" << QStringList {} << RunOption::OnCopy;
 }
 
 void TestQmlformat::testFormat()
