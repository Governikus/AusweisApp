spec:
  inputs:
    revision:
      description: "Use revision of repository."
      type: string
      default: "default"
    release:
      description: "Indicates whether the pipeline is being used for a release."
      type: boolean
      default: false
---

image: ${DOCKER_REGISTRY_MIRROR}/alpine

variables:
  PIPELINE_NAME: '$CI_COMMIT_TITLE'
  REPOSITORY: https://hg.governikus.de/AusweisApp/AusweisApp2

workflow:
  name: '$PIPELINE_NAME'
  rules:
    - if: '$REVIEWBOARD_REVIEW_ID != null'
      variables:
        PIPELINE_NAME: '${REVIEWBOARD_REVIEW_ID} / ${REVIEWBOARD_DIFF_REVISION}'
    - if: '$PATCH_IDENTIFIER != null'
      variables:
        PIPELINE_NAME: 'Revision: $[[ inputs.revision ]] | Patch: ${PATCH_IDENTIFIER}'
    - when: always
      variables:
        PIPELINE_NAME: 'Revision: $[[ inputs.revision ]]'

stages:
  - generator
  - trigger

bootstrap:
  stage: generator
  before_script:
    - env
    - apk add mercurial
  script:
    - echo "RELEASE=$[[ inputs.release ]]" >> env
    - echo "REV=$[[ inputs.revision ]]" >> env
    - hg clone -U ${REPOSITORY} source
    - cd source
    - hg update -r $[[ inputs.revision ]]
    - echo "REVISION=$(hg log -r . -T '{node}')" >> ../env
    - |
      if [ -n "$REVIEWBOARD_REVIEW_ID" ]; then
         apk add rbtools
         rbt patch --server ${REVIEWBOARD_SERVER} --diff-revision ${REVIEWBOARD_DIFF_REVISION} ${REVIEWBOARD_REVIEW_ID}
      elif [ -n "$PATCH_URL" ]; then
         wget --header "JOB-TOKEN: ${CI_JOB_TOKEN}" -qO - "${PATCH_URL}" | hg --config patch.eol=auto import --no-commit -
      fi
  artifacts:
    paths:
      - source/.gitlab-ci-child.yml
    reports:
      dotenv: env

execute:
  stage: trigger
  trigger:
    include:
      - artifact: source/.gitlab-ci-child.yml
        job: bootstrap
    strategy: depend
    forward:
      pipeline_variables: true
